data = sumResult$P,
yAxisIndex = "1"
)
)
)
eplot(echartObj)
}
showResult<-function(sumResult){
echartObj<-list(
xAxis=list(
type="category",
data=sumResult$Date
),
yAxis=list(
list(
type ="value",
name="流量(m3·s-1)"
),
list(
type = "value",
name = "降雨量(mm)",
inverse="true"
)
),
series=list(
list(
name= "Qmea",
type ="line"
data = sumResult$Qmea,
yAxisIndex = "0"
),
list(
name= "Qcal",
type ="line"
data = sumResult$Qcal,
yAxisIndex = "0"
),
list(
name = "precipitation",
type="bar";
data = sumResult$P,
yAxisIndex = "1"
)
)
)
eplot(echartObj)
}
showResult<-function(sumResult){
echartObj<-list(
xAxis=list(
type="category",
data=sumResult$Date
),
yAxis=list(
list(
type ="value",
name="流量(m3·s-1)"
),
list(
type = "value",
name = "降雨量(mm)",
inverse="true"
)
),
series=list(
list(
name= "Qmea",
type ="line",
data = sumResult$Qmea,
yAxisIndex = "0"
),
list(
name= "Qcal",
type ="line",
data = sumResult$Qcal,
yAxisIndex = "0"
),
list(
name = "precipitation",
type="bar",
data = sumResult$P,
yAxisIndex = "1"
)
)
)
eplot(echartObj)
}
View(dayQ)
123hh<-cbind(dayP,dayE)
?cbind
?rbind
hhh123<-cbind(dayP,dayE)
View(hhh123)
hhh123<-cbind(dayP,dayQ)
hhh123<-hhh123[,-3:-11]
showResult(hhh123)
library(recharts)
showResult(hhh123)
?eplot
showResult<-function(sumResult){
echartObj<-list(
xAxis=list(
type="category",
data=sumResult$Date
),
yAxis=list(
list(
type ="value",
name="流量(m3·s-1)"
),
list(
type = "value",
name = "降雨量(mm)",
inverse="true"
)
),
series=list(
list(
name= "Qmea",
type ="line",
data = sumResult$Qmea,
yAxisIndex = "0"
),
list(
name= "Qcal",
type ="line",
data = sumResult$Qcal,
yAxisIndex = "0"
),
list(
name = "precipitation",
type="bar",
data = sumResult$P,
yAxisIndex = "1"
)
)
)
ePlot(echartObj)
}
showResult(hhh123)
?ePlot
showResult<-function(sumResult){
ext<-list(
xAxis=list(
type="category",
data=sumResult$Date
),
yAxis=list(
list(
type ="value",
name="流量(m3·s-1)"
),
list(
type = "value",
name = "降雨量(mm)",
inverse="true"
)
)
)
series<-list(
list(
name= "Qmea",
type ="line",
data = sumResult$Qmea,
yAxisIndex = "0"
),
list(
name= "Qcal",
type ="line",
data = sumResult$Qcal,
yAxisIndex = "0"
),
list(
name = "precipitation",
type="bar",
data = sumResult$P,
yAxisIndex = "1"
)
)
)
ePlot(series,ext)
}
showResult<-function(sumResult){
ext<-list(
xAxis=list(
type="category",
data=sumResult$Date
),
yAxis=list(
list(
type ="value",
name="流量(m3·s-1)"
),
list(
type = "value",
name = "降雨量(mm)",
inverse="true"
)
)
)
series<-list(
list(
name= "Qmea",
type ="line",
data = sumResult$Qmea,
yAxisIndex = "0"
),
list(
name= "Qcal",
type ="line",
data = sumResult$Qcal,
yAxisIndex = "0"
),
list(
name = "precipitation",
type="bar",
data = sumResult$P,
yAxisIndex = "1"
)
)
ePlot(series,ext)
}
showResult(hhh123)
names(hhh123)<-c("Date","P","Qmea","Qcal")
showResult(hhh123)
read(hhData)
changeModelParameter<-function(modelIndex,paraIndex,value){
}
changeModelParameter<-function(modelIndex,parameter){
}
changeModelParameter(1,1,1)
?function
?function
??function
function()
View(modelPapameter)
?stopifnot
changeModelParameter<-function(parameterValue,paraIndex,value){
if (length(parameterValue)!= 17){
stop("The parameterValue is not correct!!")
}
if (!is.numeric(value)){
stop("The value should be numeric!")
}
for(i in 1:length(parameterValue)){
if(rownames(parameterValue)[i]==paraIndex){
funFlag = TRUE
parameterValue[i]<-value
}
}
if(funFlag ==FALSE){
stop("The paraIndex is not correct,please check the uppercase!")
}
}
changeModelParameter<-function(parameterValue,paraIndex,value){
if (length(parameterValue)!= 17){
stop("The parameterValue is not correct!!")
}
if (!is.numeric(value)){
stop("The value should be numeric!")
}
for(i in 1:length(parameterValue)){
if(rownames(parameterValue)[i]==paraIndex){
funFlag = TRUE
parameterValue[i]<-value
}
}
if(funFlag ==FALSE){
stop("The paraIndex is not correct,please check the uppercase!")
}
return(parameterValue)
}
changeModelParameter(parameterValue = hhData[[1]]$dayParameterValue,paraIndex = "CS",value = 0.25)
parameterValue = hhData[[1]]$dayParameterValue
hhData[[1]]$dayParameterValue
changeModelParameter<-function(parameterValue,paraIndex,value){
parameterName<-c("KC","UM","LM","C","WM","B","IM","SM","EX","KG","KI","CI","CG","CS","L","KE","XE")
if (length(parameterValue)!= 17){
stop("The parameterValue is not correct!!")
}
if (!is.numeric(value)){
stop("The value should be numeric!")
}
for(i in 1:length(parameterValue)){
if(parameterName[i]==paraIndex){
funFlag = TRUE
parameterValue[i]<-value
}
}
if(funFlag ==FALSE){
stop("The paraIndex is not correct,please check the uppercase!")
}
return(parameterValue)
}
changeModelParameter(parameterValue = hhData[[1]]$dayParameterValue,paraIndex = "CS",value = 0.25)
changeModelParameter(parameterValue = hhData[[1]]$dayParameterValue,paraIndex = "Cs",value = 0.25)
changeModelParameter<-function(parameterValue,paraIndex,value){
parameterName<-c("KC","UM","LM","C","WM","B","IM","SM","EX","KG","KI","CI","CG","CS","L","KE","XE")
funFlag = FALSE
if (length(parameterValue)!= 17){
stop("The parameterValue is not correct!!")
}
if (!is.numeric(value)){
stop("The value should be numeric!")
}
for(i in 1:length(parameterValue)){
if(parameterName[i]==paraIndex){
funFlag = TRUE
parameterValue[i]<-value
}
}
if(funFlag ==FALSE){
stop("The paraIndex is not correct,please check the uppercase!")
}
return(parameterValue)
}
changeModelParameter(parameterValue = hhData[[1]]$dayParameterValue,paraIndex = "Cs",value = 0.25)
?stop
tst2 <- function(...) stop("dummy error", call. = FALSE)
try(tst2(1:10, longcalling, expression, but.not.seen.in.Error))
iter <- 12
try(if(iter > 10) stop("too many iterations"))
changeModelParameter(parameterValue = hhData[[1]]$dayParameterValue,paraIndex = "Cs",value = 0.25)
changeModelParameter(parameterValue = hhData[[1]]$dayParameterValue,paraIndex = "CS",value = 0.25)
library(recharts)
setwd("E:/RXAJ/RXAJ/R")
source("showResult.R",encoding = "utf-8")
setwd("E:/RXAJ/RXAJ/src")
library(Rcpp)
library(reshape2)
library(lubridate)
sourceCpp("dXAJ.cpp")
dXAJ<-function(modelParameter,basinInfo,basinData){
# browser()
cat("The simulation started from ",as.character(basinData[[1]])," and ended at ",as.character(basinData[[2]]),"\n")
dayResult<-.Call("dXAJ",modelParameter,basinInfo,basinData)
totalR<-dayResult[[12]]
totalR<-totalR*24*3.6/basinInfo[[2]]
sumResult<-data.frame(basinData[[4]]$Date,dayResult[[11]],dayResult[[10]],totalR,dayResult[[4]])
colnames(sumResult)<-c("Date","P","E","R","W")
sumResultBalance<-sumResult
sumResultBalance$Date<-year(sumResultBalance$Date)
sumResultBalance<-melt(sumResultBalance,id=c("Date"))
sumResultBalance<-dcast(sumResultBalance,Date~variable,sum)
sumResultBalance[,6]<-sumResultBalance[,2]-sumResultBalance[,3]-sumResultBalance[,4]-sumResultBalance[,5]
colnames(sumResultBalance)[6]<-"sum"
View(sumResultBalance)
save(sumResultBalance,file = "sumResultBalance")
save(dayResult,file = "dayResult")
resultData<-data.frame(basinData[[4]]$Date,dayResult[[11]],dayResult[[12]],basinData[[5]]$Qmea)
colnames(resultData)<-c("Date","P","Qcal","Qmea")
return(resultData)
}
initHourData<-function(dayStart,floodData){
try(load("dayResult"),stop("Error in read the Day Model Result ,please run the follow check list:\n 1.set the workstation \n 2.run the dayModel"))
numDiff<-floor(difftime(floodData$timeStart,dayStart,units = "days"))
cat(numDiff)
floodData$initialValue[1,]<-dayResult$outWu[numDiff,]
floodData$initialValue[2,]<-dayResult$outWl[numDiff,]
floodData$initialValue[3,]<-dayResult$outWd[numDiff,]
floodData$initialValue[4,]<-dayResult$outQs0[numDiff,]
floodData$initialValue[5,]<-dayResult$outQi0[numDiff,]
floodData$initialValue[6,]<-dayResult$outQg0[numDiff,]
floodData$initialValue[7,]<-dayResult$outS0[numDiff,]
floodData$initialValue[8,]<-dayResult$outFr0[numDiff,]
return(floodData)
}
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
load("hhData")
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
hhData[[1]]$hourParameterValue
hhData[[1]]
hhData[[1]]$hourParameterValue<-changeModelParameter(hhData[[1]]$hourParameterValue,"L",2)
hhData[[1]]
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
hhData[[1]]
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
hhData[[1]]
hhData[[1]]$hourParameterValue<-changeModelParameter(hhData[[1]]$hourParameterValue,"CS","0.25")
hhData[[1]]$hourParameterValue<-changeModelParameter(hhData[[1]]$hourParameterValue,"CS",0.25)
hhData[[1]]
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
hhData$modelPapameter
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
hhData$modelPapameter$hourParameterValue<-changeModelParameter(hhData$modelPapameter$hourParameterValue,"L",0)
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
sourceCpp("hXAJ.cpp")
hXAJ<-function(modelParameter,basinInfo,basinData){
res<-.Call("hXAJ",modelParameter,basinInfo,basinData)
}
resultData<-hXAJ(modelParameter = hhData[[1]]$hourParameterValue,basinInfo = hhData[[2]],basinData = floodData1)
showResult(hhData$floodData1$hourQ$YMDHM,resultData$outP,resultData$stationQcal,floodData1$hourQ$Qmea)
