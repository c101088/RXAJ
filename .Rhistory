list(
name="总分",
type='pie',
center=c("85%","50%"),
radius=c("20%","40%"),
avoidLabelOverlap="false",
color=c("#6BAED6","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[6],name=paste("总分\n",as.character(scores[6]))),
c(value=100-scores[6])
)
)
)
)
echart(barnline,width = 700,height =400)
scores<-c(86.4,79.6,77.3,58.1,81.2,70.1)
#在echart2.x中label选项放至于itemStyle.normal下，echart3.0放至于itemStyle同级
#本程序适用于echart3.0版本，及自己适配的rechart2.0
#绘图采用蓝色色系--Blues9
barnline<-list(
title = list(),
tooltip = list(),
legend = list(
orient="vertical",
x="left",
data=c("溶解氧","高锰酸盐指数","氨氮","总磷","总氮")
),
# visualMap = list(
#   type = "piecewise",
#   show = "false",
#      # min="0",
#      # max="100",
#   # splitNumber="10"
#   inRange = list(
#     color = c('#4682B4', '#FFD700',"#FF4500")
#   )
#
# ),
#
#
series = list(
list(
name="溶解氧",
type='pie',
center=c("40%","50%"),
radius=c("0%","15.2%"),
avoidLabelOverlap="true",
color=c("#6BAED6","#B0C4DE"),
label=list(
normal=list(
show="true",
position="inside"
#      formatter='{d}'
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[1],name=paste("DO\n",as.character(scores[1]))),
c(value=100-scores[1])
)
),
list(
name="高锰酸盐指数",
type='pie',
center=c("40%","50%"),
radius=c("15.2%","30.5%"),
avoidLabelOverlap="false",
color=c("#2171B5","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[2],name=paste("CODsMn\n",as.character(scores[2]))),
c(value=100-scores[2])
)
),
list(
name="氨氮",
type='pie',
center=c("40%","50%"),
radius=c("30.5%","55.1%"),
avoidLabelOverlap="false",
color=c("#08519C","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[3],name=paste("NH3N\n",as.character(scores[3]))),
c(value=100-scores[3])
)
),
list(
name="总磷",
type='pie',
center=c("40%","50%"),
radius=c("55.1%","74.6%"),
avoidLabelOverlap="true",
color=c("#4292C6","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
),
emphasis=list(
show="true",
textStyle=list (
fontSize ='30',
fontWeight= 'bold')
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[4],name=paste("TN\n",as.character(scores[4]))),
c(value=100-scores[4])
)
),
list(
name="总氮",
type='pie',
center=c("40%","50%"),
radius=c("74.6%","100%"),
avoidLabelOverlap="false",
color=c("#08306B","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[5],name=paste("TP\n",as.character(scores[5]))),
c(value=100-scores[5])
)
),
list(
name="总分",
type='pie',
center=c("85%","50%"),
radius=c("20%","40%"),
avoidLabelOverlap="false",
color=c("#6BAED6","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[6],name=paste("总分\n",as.character(scores[6]))),
c(value=100-scores[6])
)
)
)
)
echart(barnline,width = 700,height =400)
scores<-c(86.4,79.6,77.3,58.1,81.2,70.1)
#在echart2.x中label选项放至于itemStyle.normal下，echart3.0放至于itemStyle同级
#本程序适用于echart3.0版本，及自己适配的rechart2.0
#绘图采用蓝色色系--Blues9
barnline<-list(
title = list(),
tooltip = list(),
legend = list(
orient="vertical",
x="left",
data=c("溶解氧","高锰酸盐指数","氨氮","总磷","总氮")
),
# visualMap = list(
#   type = "piecewise",
#   show = "false",
#      # min="0",
#      # max="100",
#   # splitNumber="10"
#   inRange = list(
#     color = c('#4682B4', '#FFD700',"#FF4500")
#   )
#
# ),
#
#
series = list(
list(
name="溶解氧",
type='pie',
center=c("40%","50%"),
radius=c("0%","15.2%"),
avoidLabelOverlap="true",
color=c("#6BAED6","#B0C4DE"),
label=list(
normal=list(
show="true",
position="inside"
#      formatter='{d}'
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[1],name=paste("DO\n",as.character(scores[1]))),
c(value=100-scores[1])
)
),
list(
name="高锰酸盐指数",
type='pie',
center=c("40%","50%"),
radius=c("15.2%","30.5%"),
avoidLabelOverlap="false",
color=c("#2171B5","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[2],name=paste("CODsMn\n",as.character(scores[2]))),
c(value=100-scores[2])
)
),
list(
name="氨氮",
type='pie',
center=c("40%","50%"),
radius=c("30.5%","55.1%"),
avoidLabelOverlap="false",
color=c("#08519C","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[3],name=paste("NH3N\n",as.character(scores[3]))),
c(value=100-scores[3])
)
),
list(
name="总磷",
type='pie',
center=c("40%","50%"),
radius=c("55.1%","74.6%"),
avoidLabelOverlap="true",
color=c("#08306B","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
),
emphasis=list(
show="true",
textStyle=list (
fontSize ='30',
fontWeight= 'bold')
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[4],name=paste("TP\n",as.character(scores[4]))),
c(value=100-scores[4])
)
),
list(
name="总氮",
type='pie',
center=c("40%","50%"),
radius=c("74.6%","100%"),
avoidLabelOverlap="false",
color=c("#4292C6","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[5],name=paste("TN\n",as.character(scores[5]))),
c(value=100-scores[5])
)
),
list(
name="总分",
type='pie',
center=c("85%","50%"),
radius=c("20%","40%"),
avoidLabelOverlap="false",
color=c("#6BAED6","#B0C4DE"),
label=list(
normal=list(
show="false",
position="inside"
)
),
labelLine=list(normal=list(show="false")),
data=list(
c(value=scores[6],name=paste("总分\n",as.character(scores[6]))),
c(value=100-scores[6])
)
)
)
)
echart(barnline,width = 700,height =400)
？Rcpp
?Rcpp
??Rcpp
library(Rcpp)
setwd("E:/RXAJ")
Rcpp.package.skeleton(name = "RXAJ")
parameterName<-c("KC","UM","LM","C","WM","B","IM","SM","EX","KG","KI","CI","CG","CS","L","KE","XE")
parameterValue<-c(0.5,15,80,0.15,180,0.2,0.03,0,1.2,0,0,0,0,0,0,0,0)
modelPapameter<-data.frame(parameterValue)
colnames(modelPapameter)<-parameterName
View(modelPapameter)
View(modelPapameter)
##This script is used for data preparation
parameterName<-c("KC","UM","LM","C","WM","B","IM","SM","EX","KG","KI","CI","CG","CS","L","KE","XE")
parameterValue<-c(0.5,15,80,0.15,180,0.2,0.03,0,1.2,0,0,0,0,0,0,0,0)
modelPapameter<-data.frame(parameterValue)
rownames(modelPapameter)<-parameterName
##This script is used for data preparation
parameterName<-c("KC","UM","LM","C","WM","B","IM","SM","EX","KG","KI","CI","CG","CS","L","KE","XE")
dayParameterValue<-c(0.5,15,80,0.15,180,0.2,0.03,0,1.2,0,0,0,0,0,0,0,0)
dayModelPapameter<-data.frame(dayParameterValue)
rownames(modelPapameter)<-parameterName
##This script is used for data preparation
parameterName<-c("KC","UM","LM","C","WM","B","IM","SM","EX","KG","KI","CI","CG","CS","L","KE","XE")
dayParameterValue<-c(0.5,15,80,0.15,180,0.2,0.03,0,1.2,0,0,0,0,0,0,0,0)
dayModelPapameter<-data.frame(dayParameterValue)
rownames(dayModelPapameter)<-parameterName
dayModelPapameter$dayParameterValue
dayModelPapameter[1]
dayModelPapameter[1,]
dayModelPapameter$dayParameterValue[1]
##This script is used for data preparation
parameterName<-c("KC","UM","LM","C","WM","B","IM","SM","EX","KG","KI","CI","CG","CS","L","KE","XE")
dayParameterValue<-c(0.5,15,80,0.15,180,0.2,0.03,0,1.2,0,0,0,0,0,0,0,0)
hourParameterValue<-c(0.5,15,80,0.15,180,0.2,0.03,0,1.2,0,0,0,0,0,0,0,0)
dayModelPapameter<-data.frame(dayParameterValue,hourParameterValue)
rownames(dayModelPapameter)<-parameterName
##This script is used for data preparation
parameterName<-c("KC","UM","LM","C","WM","B","IM","SM","EX","KG","KI","CI","CG","CS","L","KE","XE")
dayParameterValue<-c(0.5,15,80,0.15,180,0.2,0.03,0,1.2,0,0,0,0,0,0,0,0)
hourParameterValue<-c(0.5,15,80,0.15,180,0.2,0.03,0,1.2,0,0,0,0,0,0,0,0)
modelPapameter<-data.frame(dayParameterValue,hourParameterValue)
rownames(modelPapameter)<-parameterName
View(modelPapameter)
dayEv
library(RODBC)
mycon<-odbcConnectAccess2007("E:/Rlanguage/data.mdb")
dayEv<-sqlFetch(mycon,"ST_DAYEV")
dayQ<-sqlFetch(mycon,"ST_DAYRIVER")
dayRain<-sqlFetch(mycon,"ST_DAYRNFL")
hourEv<-sqlFetch(mycon,"ST_EV")
hourQ<-sqlFetch(mycon,"ST_RIVER")
hourRain<-sqlFetch(mycon,"ST_RNFL")
dayQ<-sqlFetch(mycon,"ST_DAYRIVER")
View(hourQ)
library(reshape2)
data1<-dcast(data = dayEv,YMDHM~STCD)
dayEv1<-data1[difftime("2004-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:2]
data1<-dcast(data = dayRain,YMDHM~STCD)
dayRain1<-data1[difftime("2004-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
data1<-dcast(data = dayQ,YMDHM~STCD)
dayQ1<-data1[difftime("2004-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
data1<-dcast(data = hourEv,YMDHM~STCD)
hourEv1<-data1[difftime("2004-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
data1<-dcast(data =hourQ,YMDHM~STCD)
hourQ1<-data1[difftime("2004-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
data1<-dcast(data = hourRain,YMDHM~STCD)
hourRain1<-data1[difftime("2004-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
library(reshape2)
data1<-dcast(data = dayEv,YMDHM~STCD)
dayEv<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:2]
data1<-dcast(data = dayRain,YMDHM~STCD)
dayRain<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
data1<-dcast(data = dayQ,YMDHM~STCD)
dayQ<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
data1<-dcast(data = hourEv,YMDHM~STCD)
hourEv<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
data1<-dcast(data =hourQ,YMDHM~STCD)
hourQ<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
data1<-dcast(data = hourRain,YMDHM~STCD)
hourRain<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
View(dayRain)
View(hourRain)
View(dayRain)
library(RODBC)
hourRain<-sqlFetch(mycon,"ST_RNFL")
mycon<-odbcConnectAccess2007("E:/Rlanguage/data.mdb")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
data1<-dcast(data = hourRain,YMDHM~STCD)
hourRain<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
View(hourRain)
View(dayEv1)
View(dayQ)
View(dayRain)
View(hourEv)
View(hourQ)
View(hourRain)
write.csv(hourRain)
?write.csv
write.csv(hourRain,file="111.csv")
View(dayRain)
library(RODBC)
mycon<-odbcConnectAccess2007("E:/Rlanguage/data.mdb")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
View(hourRain)
?RODBC
RShowDoc("RODBC", package="RODBC")
library(RODBC)
mycon<-odbcConnectAccess2007("E:/Rlanguage/data.mdb")
hourQ<-sqlFetch(mycon,"ST_RIVER")
View(hourQ)
hourEv<-sqlFetch(mycon,"ST_EV")
View(hourEv)
odbcClose(mycon)
library(RODBC)
mycon<-odbcConnect("E:/Rlanguage/data.mdb")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
library(RODBC)
mycon<-odbcConnect("heihe")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
?sqlFetch
library(RODBC)
mycon<-odbcConnect("heihe")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
View(hourRain)
View(hourRain)
library(RODBC)
mycon<-odbcConnect("heihe")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
View(hourRain)
data1<-dcast(data = hourRain,YMDHM~STCD)
hourRain1<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
library(reshape2)
data1<-dcast(data = hourRain,YMDHM~STCD)
hourRain1<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
View(hourRain1)
str(hourRain)
library(RODBC)
mycon<-odbcConnectAccess2007("E:/Rlanguage/data.mdb")
dayEv<-sqlFetch(mycon,"ST_DAYEV")
odbcClose(mycon)
str(dayEv)
?as.POSIXct()
hourRain<-as.POSIXct(hourRain$YMDHM)
library(RODBC)
mycon<-odbcConnect("heihe")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
hourRain$YMDHM<-as.POSIXct(hourRain$YMDHM)
hourRain$YMDHM<-as.POSIXct(hourRain$YMDHM,format="%Y-%m-%d %H:%M:%S")
library(RODBC)
mycon<-odbcConnect("heihe")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
hourRain$YMDHM<-as.POSIXct(hourRain$YMDHM,format="%Y-%m-%d %H:%M:%S")
library(RODBC)
mycon<-odbcConnect("heihe")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
library(RODBC)
mycon<-odbcConnect("heihe")
hourRain<-sqlFetch(mycon,"ST_RNFL")
odbcClose(mycon)
strptime(hourRain$YMDHM )
strptime(hourRain$YMDHM)
strptime(hourRain$YMDHM,format =  "%Y-%m-%d %H:%M:%S")
strptime(hourRain$YMDHM,format =  "%Y/%m/%d %H:%M:%S")
str(hourRain$YMDHM)
str(dayEv$YMDHM)
strptime(as.character(hourRain$YMDHM),format =  "%Y/%m/%d %H:%M:%S")
difftime(hourRain$YMDHM[1],"2003-05-08 04:00:00",units = "day")
difftime(hourRain$YMDHM[1],"2003-05-08 04:00:00",units = "hour")
difftime(hourRain$YMDHM[1],"2003-03-31 01:00:00",units = "hour")
data1<-dcast(data = hourRain,YMDHM~STCD)
hourRain1<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:ncol(data1)]
View(data1)
View(dayEv)
?dcast
data1<-dcast(data = dayEv,YMDHM~STCD)
View(data1)
data1<-dcast(data = dayEv,YMDHM~STCD,value.var = "EA")
dayEv<-data1[difftime("2013-1-1 08:00:00",data1$YMDHM,units = "days")>0,1:2]
data1<-dcast(data = hourRain,YMDHM~STCD,value.var = "P")
data1<-dcast(data = hourRain,YMDHM~STCD,mean,value.var = "P")
